#!/usr/bin/env bash

IMAGE_NAME=ros-melodic
VIDEO_DEVICE=/dev/video0
# Get the group number of the video group, docker groups may differ
VIDEO_GROUP=`stat -c "%g" $VIDEO_DEVICE`
UUCP_GROUP=`cat /etc/group | grep uucp | cut -d : -f 3`
DOCKER_GROUP=`cat /etc/group | grep docker | cut -d : -f 3`

# Test whether a running container exists
CONTAINER_NAME=`docker ps --filter status=running --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $CONTAINER_NAME ]]; then
    echo "Container already running, connect with ./connect or stop it with ./stop"
    exit 1
fi

# Test whether a stopped container exists
CONTAINER_NAME=`docker ps --filter status=exited --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $CONTAINER_NAME ]]; then
	echo "Resuming stopped container"
	docker start $CONTAINER_NAME > /dev/null
else
	# Run the container with shared X11
	docker run \
	  -d\
	  --net=host\
	  --add-host=$HOSTNAME:127.0.1.1 \
	  -e SHELL\
	  -e DISPLAY\
	  -e DOCKER=1\
	  -v "$HOME:$HOME:rw"\
	  -v "/tmp/.X11-unix:/tmp/.X11-unix:rw"\
	  -v "/opt/pycharm-professional:/opt/pycharm-professional:ro"\
	  -v "/opt/clion:/opt/clion:ro"\
	  --device=$VIDEO_DEVICE:/dev/video0 \
	  -v "/var/run/docker.sock:/var/run/docker.sock:rw" \
	  --group-add=$VIDEO_GROUP \
	  --group-add=$UUCP_GROUP \
	  --group-add=$DOCKER_GROUP \
	  --name "rosdocked_melodic" \
	  -it $IMAGE_NAME > /dev/null  # Do not print container id
fi

