#!/usr/bin/env bash

IMAGE_NAME=bitbots-melodic
VIDEO_DEVICE=/dev/video0
# Get the group number of the video group, docker groups may differ
UUCP_GROUP=`cat /etc/group | grep uucp | cut -d : -f 3`

# Test whether a running container exists
CONTAINER_NAME=`podman ps --filter status=running --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $CONTAINER_NAME ]]; then
    echo "Container already running, connect with ./connect or stop it with ./stop"
	exit
fi

# Test whether a stopped container exists
CONTAINER_NAME=`podman ps -a --filter status=exited --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $CONTAINER_NAME ]]; then
	echo "Resuming stopped container"
	podman start $CONTAINER_NAME > /dev/null

else
	echo "Starting new container as $NEW_CONTAINER_NAME"
	podman run \
	  --tty \
	  --detach \
	  --privileged \
	  --userns=host \
	  --net="host" \
	  --add-host=$HOSTNAME:127.0.1.1 \
	  -e SHELL \
	  -e DISPLAY \
	  -e DOCKER=1 \
	  --mount type=bind,src=$HOME,target=$HOME \
	  --mount type=bind,src=/tmp/.X11-unix,target=/tmp/.X11-unix \
	  --mount type=bind,src=$XDG_RUNTIME_DIR,target=$XDG_RUNTIME_DIR \
	  --mount type=bind,src=/opt/pycharm-professional,target=/opt/pycharm-professional,ro \
	  --mount type=bind,src=/opt/clion,target=/opt/clion,ro \
	  $@ \
	  $IMAGE_NAME
fi

