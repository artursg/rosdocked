#!/usr/bin/env bash

IMAGE_NAME=bitbots-melodic
NEW_CONTAINER_NAME=rospod-melodic

# Test whether a running container exists
RUNNING_CONTAINER_NAME=`podman ps --filter status=running --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $RUNNING_CONTAINER_NAME ]]; then
    echo "Container already running, connect with ./connect or stop it with ./stop"
	exit
fi

# Test whether a stopped container exists
EXITED_CONTAINER_NAME=`podman ps -a --filter status=exited --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
CREATED_CONTAINER_NAME=`podman ps -a --filter status=created --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
PAUSED_CONTAINER_NAME=`podman ps -a --filter status=paused --filter ancestor=$IMAGE_NAME --format "{{.Names}}"`
if [[ -n $EXITED_CONTAINER_NAME ]]; then
	echo "Resuming exited container"
	podman start $EXITED_CONTAINER_NAME >/dev/null

elif [[ -n $CREATED_CONTAINER_NAME ]]; then
	echo "Starting created container"
	podman start $CREATED_CONTAINER_NAME >/dev/null

elif [[ -n $PAUSED_CONTAINER_NAME ]]; then
	echo "Unpausing paused container"
	podman unpause $PAUSED_CONTAINER_NAME

else
	echo "Starting new container as $NEW_CONTAINER_NAME"

	if [[ -d /opt/pycharm-professional ]]; then
		MOUNT_PYCHARM="--mount type=bind,src=/opt/pycharm-professional,target=/opt/pycharm-professional,ro"
	else
		MOUNT_PYCHARM=""
	fi

	if [[ -d /opt/clion ]]; then
		MOUNT_CLION="--mount type=bind,src=/opt/clion,target=/opt/clion,ro"
	else
		MOUNT_CLION=""
	fi

	podman run \
	  --tty \
	  --detach \
	  --privileged \
	  --userns=host \
	  --cap-add='CAP_NET_BROADCAST' --cap-add='CAP_NET_RAW' \
	  --net="host" \
	  --add-host=$HOSTNAME:127.0.1.1 \
	  -e SHELL \
	  -e DISPLAY \
	  -e CONTAINER=1 \
	  --mount type=bind,src=$HOME,target=$HOME \
	  --mount type=bind,src=/tmp/.X11-unix,target=/tmp/.X11-unix \
	  --mount type=bind,src=$XDG_RUNTIME_DIR,target=$XDG_RUNTIME_DIR \
	  $MOUNT_PYCHARM \
	  $MOUNT_CLION \
	  --name $NEW_CONTAINER_NAME \
	  $@ \
	  $IMAGE_NAME >/dev/null
fi

